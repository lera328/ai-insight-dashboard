// Это схема данных для Prisma ORM
// Документация: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

// Модель пользователя, соответствующая NextAuth
model User {
  id            String         @id @default(uuid())
  name          String?
  email         String         @unique
  emailVerified DateTime?
  image         String?
  password      String?        // Хэш пароля для локальной авторизации
  role          String?        // Роль пользователя (admin, user, и т.д.)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  accounts      Account[]
  sessions      Session[]
  insightBoards InsightBoard[] // Связь с досками инсайтов
}

// Модель аккаунта для OAuth провайдеров (интеграция с NextAuth)
model Account {
  id                String   @id @default(uuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

// Модель сессии пользователя (интеграция с NextAuth)
model Session {
  id           String   @id @default(uuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

// Модель для токена верификации (интеграция с NextAuth)
model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}

// Доска инсайтов
model InsightBoard {
  id          String   @id @default(uuid())
  title       String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      String   // Владелец доски
  fileName    String?  // Имя файла, если был анализ файла
  model       String?  // Модель ИИ, которая генерировала инсайты
  temperature Float?   // Параметр генерации
  
  // Основное содержимое доски
  insights    Json     // Структура с инсайтами в формате JSON
  sourceText  String   // Исходный текст анализа
  
  // Дополнительные метаданные
  metadata    Json?    // Дополнительные метаданные (произвольные)
  
  // Отношения
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}
